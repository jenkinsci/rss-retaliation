apply plugin: 'groovy'
apply plugin: 'idea'
apply plugin: 'application'
apply plugin: 'maven-publish'


mainClassName = "com.tngtech.jenkins.notification.Bootstrap"
sourceCompatibility = "1.7"

buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath('au.com.ish.gradle:release:2.2.2') {
            exclude group: 'org.tmatesoft.svnkit'
        }
    }
}

apply plugin: 'release'

release {
    failOnSnapshotDependencies = true
    allowLocalModifications = true
    releaseDryRun = false
    scm = 'git'
}
version = release.projectVersion

repositories {
    mavenCentral()
    maven {
        url 'http://nexus.ailis.de/content/groups/public'
    }
}
ext {
    camelVersion = '2.12.3'
    groovyVersion = '2.2.1'
}

tasks.withType(Compile) {
    options.encoding = 'UTF-8'
}

configurations {
    all*.exclude group: 'org.codehaus.groovy', module: 'groovy-all'
}

dependencies {
    compile group: 'org.codehaus.groovy', name: 'groovy', version: groovyVersion
    compile group: 'org.codehaus.groovy', name: 'groovy-json', version: groovyVersion
    compile group: 'org.codehaus.groovy', name: 'groovy-xml', version: groovyVersion
    compile group: 'org.codehaus.groovy.modules.http-builder', name: 'http-builder', version: '0.7.1'
    compile group: 'de.ailis.usb4java', version: '1.0.0', name: 'usb4java'
    compile group: 'org.apache.camel', name: 'camel-core', version: camelVersion
    compile group: 'org.apache.camel', name: 'camel-atom', version: camelVersion
    compile group: 'org.apache.camel', name: 'camel-netty', version: camelVersion
    compile group: 'javazoom', name: 'jlayer', version: '1.0.1'
    runtime 'org.slf4j:slf4j-simple:1.6.6'

    testCompile group: 'junit', name: 'junit', version: '4.11'
    testCompile group: 'org.spockframework', name: 'spock-core', version: '0.7-groovy-2.0'
    testCompile group: 'cglib', name: 'cglib-nodep', version: '3.1'
    testCompile group: 'org.apache.camel', name: 'camel-test', version: camelVersion
    testCompile group: 'org.mockito', name: 'mockito-core', version: '1.9.5'
}

task sourceJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = 'com.tngtech.jenkins.notification.retaliation'
            artifactId = 'jenkins-rss-retaliation'
            from components.java

            artifact sourceJar {
                classifier "sources"
            }
            artifact javadocJar {
                classifier "javadoc"
            }

            artifact distZip {
                classifier "dist"
            }
        }
    }
    repositories {
        maven {
            url 'https://api.bintray.com/maven/wolfs/maven/jenkins-rss-retaliation'
            credentials {
                username = 'wolfs'
                password = hasProperty('bintrayApiKey') ? bintrayApiKey : ''
            }
        }
    }
}
